# -*- coding: utf-8 -*-
"""pcd_uasdidi1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11Xg4BRcMVfRAsjUDXl1bPeL5W4Lhr905

A. citra original to citra gyrscale
1. kita harus memanggil library python package yang di perlukan dengan cara    
mengimportkan library python package nya
"""

import imageio

import matplotlib.pyplot as plt

import numpy as np

"""2. masukkan kode untuk memasukkan citra original terlebih dahulu"""

gambar_original = imageio.imread("didi4.jpg")

plt.imshow(gambar_original)
plt.title("Citra original")
plt.show()

"""3. selanjutnya masukkan kode segmentasi citra digital yang kita inginkan, di sini saya memakai segmentasi citra digital grayscale"""

imgGrayscale = np.zeros((gambar_original.shape[0], gambar_original.shape[1], 3), dtype=np.uint8)
for y in range(0, gambar_original.shape[0]):
  for x in range(0, gambar_original.shape[1]):
    r = gambar_original[y][x][0]
    g = gambar_original[y][x][1]
    b = gambar_original[y][x][2]
    gr = ( int(r) + int(g) + int(b) ) / 3
    imgGrayscale[y][x] = (gr, gr, gr)
        
plt.imshow(imgGrayscale)
plt.title("Citra Grayscale")
plt.show()

"""B. Citra Original to citra metode NoiseGaussian
   1. kita harus memanggil library python package yang di perlukan dengan cara    
mengimportkan library python package nya
"""

import imageio
import matplotlib.pyplot as plt
import numpy as np

"""2. masukkan kode untuk memasukkan citra original terlebih dahulu"""

citra_asli = imageio.imread("didi4.jpg")

plt.imshow(citra_asli)
plt.title("citra original")
plt.show()

"""3. selanjutnya masukkan kode segmentasi citra digital yang kita inginkan, di sini saya memakai segmentasi citra digital metode NoiseGaussian"""

imgNoiseGaussian = np.zeros((gambar_original.shape[0], gambar_original.shape[1], 3), dtype=np.uint8)

# Add noise
for y in range(0, gambar_original.shape[0]):
    for x in range(0, gambar_original.shape[1]):
        xg = imgGrayscale[y][x][0]
        xb = xg
        nr = np.random.randint(0,100)
        if nr < 20:
            ns = np.random.randint(0,256) - 128
            xb = int(xg + ns)
            if xb < 0:
                xb = -xb
            if xb > 255:
                xb = 255
        imgNoiseGaussian[y][x] = (xb, xb, xb)

plt.imshow(imgNoiseGaussian)
plt.title("Citra Noise Gaussian")
plt.show()

"""C. Citra Original to citra inversi   grayscale dan inversi rgb

1. kita harus memanggil library python package yang di perlukan dengan cara    
mengimportkan library python package nya
"""

import numpy as np
import imageio
import matplotlib.pyplot as plt

"""2. masukkan kode untuk memasukkan citra original terlebih dahulu"""

citra_asli = imageio.imread("didi2.png")

plt.imshow(citra_asli)
plt.title("citra original")
plt.show()

"""3. selanjutnya masukkan kode segmentasi citra digital yang kita inginkan, di sini saya memakai segmentasi citra digital metode inversi grayscale dan inversi rgb"""

# membaca gambar

img = imageio.imread("didi2.png")

img_height = img.shape[0]
img_width = img.shape[1]
img_channel = img.shape[2]

# membuat variabel versi dari gambar

img_inversi = np.zeros(img.shape, dtype=np.uint8)

# membuat fungsi untuk metode inversi grayscale

def inversi_grayscale(nilai):
  for y in range(0, img_height):
    for x in range(0, img_width):
      red = img[y][x][0]
      green = img[y][x][1]
      blue = img[y][x][2]
      gray = (int(red) + int(green) + int(blue)) / 3
      gray = nilai - gray
      img_inversi[y][x] = (gray, gray, gray)


#membuat fungsi untuk metode inversi rgb
 
def inversi_rgb(nilai):
    for y in range(0, img_height):
        for x in range(0, img_width):
            red = img[y][x][0]
            red = nilai - red
            green = img[y][x][1]
            green = nilai - green
            blue = img[y][x][2]
            blue = nilai - blue
            img_inversi[y][x] = (red, green, blue)

# menampilkan hasil inversi

inversi_grayscale(255)
plt.imshow(img_inversi)
plt.title("inversi grayscale")
plt.show()

inversi_rgb(255)
plt.imshow(img_inversi)
plt.title("inversi rgb")
plt.show()